(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{EP0P:function(e,a,n){"use strict";n.r(a);var o=n("Ff2n"),t=n("q1tI"),p=n.n(t),r=n("6qfE"),m=p.a.createElement;a.default=function(e){var a=e.components;Object(o.a)(e,["components"]);return m(r.MDXTag,{name:"wrapper",components:a},m(r.MDXTag,{name:"h1",components:a,props:{id:"getpalettecolor"}},m(r.MDXTag,{name:"a",components:a,parentName:"h1",props:{href:"#getpalettecolor","aria-hidden":"true"}},m(r.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon icon-link"}})),"getPaletteColor"),m(r.MDXTag,{name:"p",components:a},"A utility function to get the shade of a palette color."),m(r.MDXTag,{name:"h2",components:a,props:{id:"syntax"}},m(r.MDXTag,{name:"a",components:a,parentName:"h2",props:{href:"#syntax","aria-hidden":"true"}},m(r.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon icon-link"}})),"Syntax"),m(r.MDXTag,{name:"pre",components:a},m(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-js",metaString:""}},"getPaletteColor(colorShade)(props)\ngetPaletteColor(color, shade)(props)\ngetPaletteColor(shade)(props)\n")),m(r.MDXTag,{name:"h2",components:a,props:{id:"usage"}},m(r.MDXTag,{name:"a",components:a,parentName:"h2",props:{href:"#usage","aria-hidden":"true"}},m(r.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon icon-link"}})),"Usage"),m(r.MDXTag,{name:"pre",components:a},m(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx",metaString:""}},"const Component = styled.div`\n  color: ${getPaletteColor('primary.base')};\n`\n")),m(r.MDXTag,{name:"h2",components:a,props:{id:"arguments"}},m(r.MDXTag,{name:"a",components:a,parentName:"h2",props:{href:"#arguments","aria-hidden":"true"}},m(r.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon icon-link"}})),"Arguments"),m(r.MDXTag,{name:"table",components:a},m(r.MDXTag,{name:"thead",components:a,parentName:"table"},m(r.MDXTag,{name:"tr",components:a,parentName:"thead"},m(r.MDXTag,{name:"th",components:a,parentName:"tr",props:{align:null}},"Argument"),m(r.MDXTag,{name:"th",components:a,parentName:"tr",props:{align:null}},"Type"),m(r.MDXTag,{name:"th",components:a,parentName:"tr",props:{align:null}},"Description"))),m(r.MDXTag,{name:"tbody",components:a,parentName:"table"},m(r.MDXTag,{name:"tr",components:a,parentName:"tbody"},m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},m(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"colorShade")),m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"String"),m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"The full palette color and shade expressed in dot notation, example ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"primary.base"),".")),m(r.MDXTag,{name:"tr",components:a,parentName:"tbody"},m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},m(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"color")),m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"String"),m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"The palette color, example ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"primary"),".")),m(r.MDXTag,{name:"tr",components:a,parentName:"tbody"},m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},m(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"shade")),m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"String"),m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"The shade of the palette color, example ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"base"),".")),m(r.MDXTag,{name:"tr",components:a,parentName:"tbody"},m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},m(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"props")),m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"Object"),m(r.MDXTag,{name:"td",components:a,parentName:"tr",props:{align:null}},"The props passed to the component, must contain a ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"td"},"theme")," prop.")))),m(r.MDXTag,{name:"h2",components:a,props:{id:"examples"}},m(r.MDXTag,{name:"a",components:a,parentName:"h2",props:{href:"#examples","aria-hidden":"true"}},m(r.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon icon-link"}})),"Examples"),m(r.MDXTag,{name:"h3",components:a,props:{id:"full-palette-color-and-shade"}},m(r.MDXTag,{name:"a",components:a,parentName:"h3",props:{href:"#full-palette-color-and-shade","aria-hidden":"true"}},m(r.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon icon-link"}})),"Full palette color and shade"),m(r.MDXTag,{name:"pre",components:a},m(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx",metaString:""}},"const StaticDemo = styled.div`\n  color: ${getPaletteColor('primary.base')};\n`\n")),m(r.MDXTag,{name:"pre",components:a},m(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-.jsx",metaString:""}},"<StaticDemo>Static color</StaticDemo>\n")),m(r.MDXTag,{name:"p",components:a},"Pass a full palette color and shade to return a color that isn't influenced by props. Accepts dot notation or a color and shade argument ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"getPaletteColor('primary', 'base')"),"."),m(r.MDXTag,{name:"h3",components:a,props:{id:"palette-color-driven-from-color-prop"}},m(r.MDXTag,{name:"a",components:a,parentName:"h3",props:{href:"#palette-color-driven-from-color-prop","aria-hidden":"true"}},m(r.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon icon-link"}})),"Palette color driven from color prop"),m(r.MDXTag,{name:"pre",components:a},m(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx",metaString:""}},"const ShadeDemo = styled.div`\n  color: ${getPaletteColor('base')};\n`\n")),m(r.MDXTag,{name:"pre",components:a},m(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-.jsx",metaString:""}},'<ShadeDemo color="primary">Primary</ShadeDemo>\n<ShadeDemo color="primary.dark">Primary dark</ShadeDemo>\n<ShadeDemo color="orange">Legacy orange</ShadeDemo>\n<ShadeDemo color="#007aff">Hex color</ShadeDemo>\n')),m(r.MDXTag,{name:"p",components:a},"If you only pass a shade to the function it assumes that a palette color will be passed in through a ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"color")," prop. This is useful for components who's color will be driven by a parent consumer. If the value of the ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"color")," prop happens to be a legacy color (for example ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},'color="orange"'),"), the legacy color will be returned. If the value of the ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"color")," prop is anything else it will also be returned."),m(r.MDXTag,{name:"h3",components:a,props:{id:"palette-color-driven-from-other-prop"}},m(r.MDXTag,{name:"a",components:a,parentName:"h3",props:{href:"#palette-color-driven-from-other-prop","aria-hidden":"true"}},m(r.MDXTag,{name:"span",components:a,parentName:"a",props:{className:"icon icon-link"}})),"Palette color driven from other prop"),m(r.MDXTag,{name:"pre",components:a},m(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx",metaString:""}},"const ShadeOtherDemo = styled.div`\n  background-color: ${props => getPaletteColor(props.bgColor, 'base')(props)};\n`\n")),m(r.MDXTag,{name:"pre",components:a},m(r.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-.jsx",metaString:""}},'<ShadeOtherDemo bgColor="primary">Primary</ShadeOtherDemo>\n<ShadeOtherDemo bgColor="primary.dark">Primary dark</ShadeOtherDemo>\n<ShadeOtherDemo bgColor="orange">Legacy orange</ShadeOtherDemo>\n<ShadeOtherDemo bgColor="#007aff">Hex color</ShadeOtherDemo>\n')),m(r.MDXTag,{name:"p",components:a},"You can also apply the utility to use a different prop to drive ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"color"),", or in the above example, ",m(r.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"background-color"),"."))}},"F/70":function(e,a,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/utilities/getPaletteColor",function(){return n("EP0P")}])}},[["F/70",0,1,2]]]);